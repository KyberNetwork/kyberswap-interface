name: "KyberSwap Widget Demo - Manual Deploy"

on:
  workflow_dispatch:

concurrency:
  group: zap-demo-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      current_branch: ${{ steps.current_branch.outputs.value }}
      head_sha: ${{ steps.head_sha.outputs.value }}
      image_tag: ${{ steps.get_tag.outputs.image_tag }}
      branch_tag: ${{ steps.get_tag.outputs.branch_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract branch
        id: current_branch
        shell: bash
        run: |
          REF="${GITHUB_REF#refs/heads/}"
          REF="${REF#refs/tags/}"
          echo "value=$REF" >> "$GITHUB_OUTPUT"

      - name: Extract GitHub HEAD SHA
        id: head_sha
        run: echo "value=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Get Docker image tag
        id: get_tag
        env:
          CURRENT_BRANCH: ${{ steps.current_branch.outputs.value }}
        shell: bash
        run: |
          short_sha="$(git rev-parse --short HEAD)"
          safe_branch="$(echo "$CURRENT_BRANCH" | sed 's/[^a-zA-Z0-9]/-/g' | sed 's/--*/-/g' | sed 's/-$//g')"
          echo "image_tag=${safe_branch}-${short_sha}" >> "$GITHUB_OUTPUT"
          echo "branch_tag=${safe_branch}" >> "$GITHUB_OUTPUT"

  build-zap-demo:
    runs-on: ubuntu-latest
    needs:
      - prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8.9.2
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version: 21.0.0
          registry-url: "https://npm.pkg.github.com"
          scope: "@kybernetwork"
          token: ${{ secrets.GH_PAT }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: |
          pnpm --filter "@kyber/svgr-esbuild-plugin" build
          pnpm --filter "@kyber/schema" build
          pnpm --filter "@kyber/ui" build
          pnpm --filter "@kyberswap/liquidity-chart" build
          pnpm --filter "@kyber/utils" build
          pnpm --parallel --filter "@kyberswap/liquidity-widgets" --filter "@kyberswap/zap-migration-widgets" --filter "@kyberswap/zap-out-widgets" --filter "@kyberswap/compounding-widget" build
          pnpm --filter "@kyberswap/pancake-liquidity-widgets" build

      - name: Build zap demo
        env:
          CI: false
          VITE_TAG: ${{ needs.prepare.outputs.image_tag }}
        working-directory: apps/zap-widgets-demo
        run: pnpm build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Gcloud Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GCR_CREDENTIALS }}"

      - name: Setup Gcloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-zap-demo-buildx

      - name: Build and push
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          context: apps/zap-widgets-demo
          push: true
          labels: |
            kyber.network.schema-version=1.0
            kyber.network.vcs-ref=${{ github.sha }}
            kyber.network.version=${{ needs.prepare.outputs.image_tag }}
            kyber.network.name=zap-demo
          tags: |
            asia.gcr.io/kyber-operation/core/zap-demo:${{ needs.prepare.outputs.image_tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
